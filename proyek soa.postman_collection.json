{
	"info": {
		"_postman_id": "9c13f3f8-c130-4641-9a49-29ca4134de11",
		"name": "proyek soa",
		"description": "Project tentang api games\n\nWebservice ini menyediakan pelayanan api untuk games, dimana tidak hanya menampilkan games-games yang ada tapi juga dapat digunakan untuk melihat jumlah favorit games-games tersebut",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "user",
			"item": [
				{
					"name": "history",
					"item": [
						{
							"name": "get history",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const tokenUrl = `https://waiting-pretty-somersault.glitch.me/user/login`;\r",
											"\r",
											"const getTokenRequest = {\r",
											"  method: 'POST',\r",
											"  url: tokenUrl,\r",
											"  body: {\r",
											"        mode: 'urlencoded',\r",
											"        urlencoded: [\r",
											"        {key: \"email\", value: \"demo2@gmail.com\"},\r",
											"        {key: \"password\", value: \"demo2\"}\r",
											"        ] \r",
											"    }\r",
											"};\r",
											"pm.sendRequest(getTokenRequest, (err, response) => {\r",
											"  const jsonResponse = response.json();\r",
											"  const newAccessToken = jsonResponse.key;\r",
											"  pm.environment.set('x-auth-token', newAccessToken);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Semua History berhasil ditampilkan\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"berhasil menggunakan hosting\", function () { \r",
											"    pm.expect(pm.environment.get(\"base_url\")).to.equal(\"https://waiting-pretty-somersault.glitch.me\"); \r",
											"});\r",
											"pm.test(\"response was successfull\", function () { \r",
											"    pm.response.to.not.be.error; \r",
											"    pm.response.to.have.jsonBody(\"List History\"); \r",
											"    pm.response.to.not.have.jsonBody(\"error\"); \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "key",
										"value": "{{x-auth-token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://waiting-pretty-somersault.glitch.me/user/history",
									"protocol": "https",
									"host": [
										"waiting-pretty-somersault",
										"glitch",
										"me"
									],
									"path": [
										"user",
										"history"
									]
								},
								"description": "Request untuk mendapatkan history dari user. \n\nHistory ini akan berisi informasi mengenai kegiatan user seperti, user telah melihat detail game, sudah mem-favorit game, dan menghapus rating/review\n\nnote : untuk menggunakan fitur ini user harus login terlebih dahulu"
							},
							"response": []
						},
						{
							"name": "delete history",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const tokenUrl = `https://waiting-pretty-somersault.glitch.me/user/login`;\r",
											"\r",
											"const getTokenRequest = {\r",
											"  method: 'POST',\r",
											"  url: tokenUrl,\r",
											"  body: {\r",
											"        mode: 'urlencoded',\r",
											"        urlencoded: [\r",
											"        {key: \"email\", value: \"demo2@gmail.com\"},\r",
											"        {key: \"password\", value: \"demo2\"}\r",
											"        ] \r",
											"    }\r",
											"};\r",
											"pm.sendRequest(getTokenRequest, (err, response) => {\r",
											"  const jsonResponse = response.json();\r",
											"  const newAccessToken = jsonResponse.key;\r",
											"  pm.environment.set('x-auth-token', newAccessToken);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Seluruh History berhasil dihapus\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"berhasil menggunakan hosting\", function () { \r",
											"    pm.expect(pm.environment.get(\"base_url\")).to.equal(\"https://waiting-pretty-somersault.glitch.me\"); \r",
											"});\r",
											"pm.test(\"response was successfull\", function () { \r",
											"    pm.response.to.not.be.error; \r",
											"    pm.response.to.have.jsonBody(\"msg\",\"history berhasil dibersihkan\"); \r",
											"    pm.response.to.not.have.jsonBody(\"error\"); \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "key",
										"value": "{{x-auth-token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": []
								},
								"url": {
									"raw": "https://waiting-pretty-somersault.glitch.me/user/history",
									"protocol": "https",
									"host": [
										"waiting-pretty-somersault",
										"glitch",
										"me"
									],
									"path": [
										"user",
										"history"
									]
								},
								"description": "Request yang digunakan untuk menghapus history user\n\nnote : penghapusan history ini tidak menggunakan soft delete sehingga langsung menghapus dari database"
							},
							"response": []
						}
					]
				},
				{
					"name": "favorite",
					"item": [
						{
							"name": "add favorite",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const tokenUrl = `https://waiting-pretty-somersault.glitch.me/user/login`;\r",
											"\r",
											"const getTokenRequest = {\r",
											"  method: 'POST',\r",
											"  url: tokenUrl,\r",
											"  body: {\r",
											"        mode: 'urlencoded',\r",
											"        urlencoded: [\r",
											"        {key: \"email\", value: \"demo1@gmail.com\"},\r",
											"        {key: \"password\", value: \"demo1\"}\r",
											"        ] \r",
											"    }\r",
											"};\r",
											"pm.sendRequest(getTokenRequest, (err, response) => {\r",
											"  const jsonResponse = response.json();\r",
											"  const newAccessToken = jsonResponse.key;\r",
											"  pm.environment.set('x-auth-token', newAccessToken);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Berhasil Menambah Favourite Baru\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"apikey ada\", () => {\r",
											"    pm.request.to.have.header(\"key\");\r",
											"});\r",
											"\r",
											"pm.test(\"response was successfull\", function () { \r",
											"    pm.response.to.not.be.error; \r",
											"    pm.response.to.not.have.jsonBody(\"error\"); \r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "key",
										"value": "{{x-auth-token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "id_game",
											"value": "1",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "https://waiting-pretty-somersault.glitch.me/user/favorite",
									"protocol": "https",
									"host": [
										"waiting-pretty-somersault",
										"glitch",
										"me"
									],
									"path": [
										"user",
										"favorite"
									]
								},
								"description": "request ini digunakan jika user menyukai suatu game tertentu dan berguna untuk meningkatkan popularitas game.\n\npada request ini user diwajibkan login terlebih dahulu dan menyertakan key pada header\n\npada request ini user harus menggunakan api hit agar bisa menggunakan request endpoint ini.\napi hit yang dikenakan adalah sebesar 10 hit point."
							},
							"response": []
						},
						{
							"name": "favorite",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Favourite berhasil ditampilkan\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"apikey ada\", () => {\r",
											"    pm.request.to.have.header(\"key\");\r",
											"});\r",
											"\r",
											"pm.test(\"response was successfull\", function () { \r",
											"    pm.response.to.not.be.error; \r",
											"    pm.response.to.not.have.jsonBody(\"error\"); \r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const tokenUrl = `https://waiting-pretty-somersault.glitch.me/user/login`;\r",
											"\r",
											"const getTokenRequest = {\r",
											"  method: 'POST',\r",
											"  url: tokenUrl,\r",
											"  body: {\r",
											"        mode: 'urlencoded',\r",
											"        urlencoded: [\r",
											"        {key: \"email\", value: \"demo1@gmail.com\"},\r",
											"        {key: \"password\", value: \"demo1\"}\r",
											"        ] \r",
											"    }\r",
											"};\r",
											"pm.sendRequest(getTokenRequest, (err, response) => {\r",
											"  const jsonResponse = response.json();\r",
											"  const newAccessToken = jsonResponse.key;\r",
											"  pm.environment.set('x-auth-token', newAccessToken);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "key",
										"value": "{{x-auth-token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": []
								},
								"url": {
									"raw": "https://waiting-pretty-somersault.glitch.me/user/favorite",
									"protocol": "https",
									"host": [
										"waiting-pretty-somersault",
										"glitch",
										"me"
									],
									"path": [
										"user",
										"favorite"
									]
								},
								"description": "request ini digunakan untuk menampilkan semua games yang sebelumnya pernah di favoritkan oleh user.\n\npada request ini user diwajibkan login terlebih dahulu dan menyertakan key pada header\n\npada request ini user harus menggunakan api hit agar bisa menggunakan request endpoint ini.\napi hit yang dikenakan adalah sebesar 5 hit point."
							},
							"response": []
						},
						{
							"name": "Delete Favorite",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"status code 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"// const jsonData = pm.response.json();\r",
											"// pm.test(\"response berbentuk string(pesan)\", function(){\r",
											"//     pm.expect(jsonData).to.be.an(\"string\");\r",
											"// });\r",
											"\r",
											"pm.test(\"apikey ada\", () => {\r",
											"    pm.request.to.have.header(\"key\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const tokenUrl = `https://waiting-pretty-somersault.glitch.me/user/login`;\r",
											"\r",
											"const getTokenRequest = {\r",
											"  method: 'POST',\r",
											"  url: tokenUrl,\r",
											"  body: {\r",
											"        mode: 'urlencoded',\r",
											"        urlencoded: [\r",
											"        {key: \"email\", value: \"demo1@gmail.com\"},\r",
											"        {key: \"password\", value: \"demo1\"}\r",
											"        ] \r",
											"    }\r",
											"};\r",
											"pm.sendRequest(getTokenRequest, (err, response) => {\r",
											"  const jsonResponse = response.json();\r",
											"  const newAccessToken = jsonResponse.key;\r",
											"  pm.environment.set('x-auth-token', newAccessToken);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "key",
										"value": "{{x-auth-token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "id_game",
											"value": "1",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "https://waiting-pretty-somersault.glitch.me/user/favorite",
									"protocol": "https",
									"host": [
										"waiting-pretty-somersault",
										"glitch",
										"me"
									],
									"path": [
										"user",
										"favorite"
									]
								},
								"description": "Request ini digunakan jika user ingin membatalkan favorite suatu game tertentu yang sebelumnya difavoritkan.\n\nPada request ini user diwajibkan login terlebih dahulu dan menyertakan key pada header\n\nPada request ini user harus menggunakan api hit agar bisa menggunakan request endpoint ini.\nApi hit yang dikenakan adalah sebesar 10 hit point."
							},
							"response": []
						}
					]
				},
				{
					"name": "rating/review",
					"item": [
						{
							"name": "add rating/review",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"berhasil menambahkan review\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"apikey ada\", () => {\r",
											"    pm.request.to.have.header(\"key\");\r",
											"});\r",
											"\r",
											"pm.test(\"response was successfull\", function () { \r",
											"    pm.response.to.not.be.error; \r",
											"    pm.response.to.not.have.jsonBody(\"error\"); \r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "key",
										"value": "8o3heXWG5NN2ElI",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "id_game",
											"value": "1",
											"type": "text"
										},
										{
											"key": "rating",
											"value": "80",
											"type": "text"
										},
										{
											"key": "review",
											"value": "mantul",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "https://waiting-pretty-somersault.glitch.me/user/review",
									"protocol": "https",
									"host": [
										"waiting-pretty-somersault",
										"glitch",
										"me"
									],
									"path": [
										"user",
										"review"
									]
								},
								"description": "Request ini berguna untuk menambah review dan rating  pada suatu game yang telah ditetapkan oleh user\n\nPada request ini user harus menggunakan api hit agar bisa menggunakan request endpoint ini.\nApi hit yang dikenakan adalah sebesar 10 hit point."
							},
							"response": []
						},
						{
							"name": "Update Rating/Review",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "key",
										"value": "8o3heXWG5NN2ElI",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "id_game",
											"value": "3498",
											"type": "text"
										},
										{
											"key": "rating",
											"value": "40",
											"type": "text"
										},
										{
											"key": "review",
											"value": "Ini review untuk gta 5",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "https://waiting-pretty-somersault.glitch.me/user/review",
									"protocol": "https",
									"host": [
										"waiting-pretty-somersault",
										"glitch",
										"me"
									],
									"path": [
										"user",
										"review"
									]
								},
								"description": "Request ini berguna untuk mengubah data review dan rating  pada suatu game yang ada dan telah ditetapkan oleh user\n\nPada request ini user harus menggunakan api hit agar bisa menggunakan request endpoint ini.\nApi hit yang dikenakan adalah sebesar 15 hit point."
							},
							"response": []
						},
						{
							"name": "Delete Rating/Review",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "key",
										"value": "8o3heXWG5NN2ElI",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "id_game",
											"value": "3498",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "https://waiting-pretty-somersault.glitch.me/user/review",
									"protocol": "https",
									"host": [
										"waiting-pretty-somersault",
										"glitch",
										"me"
									],
									"path": [
										"user",
										"review"
									]
								},
								"description": "Request ini berguna untuk menghapus review dan rating dari database pada suatu game yang ada dan telah ditetapkan oleh user\n\nPada request ini user harus menggunakan api hit agar bisa menggunakan request endpoint ini.\nApi hit yang dikenakan adalah sebesar 5 hit point."
							},
							"response": []
						}
					]
				},
				{
					"name": "register",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"register berhasil\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"berhasil menggunakan hosting\", function () { \r",
									"    pm.expect(pm.environment.get(\"base_url\")).to.equal(\"https://waiting-pretty-somersault.glitch.me\"); \r",
									"});\r",
									"pm.test(\"response was successfull\", function () { \r",
									"    pm.response.to.not.be.error; \r",
									"    pm.response.to.have.jsonBody(\"nama\"); \r",
									"    pm.response.to.not.have.jsonBody(\"error\"); \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "email",
									"value": "demo2@gmail.com",
									"description": "email dari user yang akan diregisterkan",
									"type": "text"
								},
								{
									"key": "password",
									"value": "demo2",
									"type": "text"
								},
								{
									"key": "nama_user",
									"value": "demo2",
									"type": "text"
								},
								{
									"key": "jenis_user",
									"value": "P",
									"type": "text"
								},
								{
									"key": "gambar_profile",
									"type": "file",
									"src": "/C:/Users/leodj/Downloads/download.jpg"
								}
							]
						},
						"url": {
							"raw": "https://waiting-pretty-somersault.glitch.me/user/register",
							"protocol": "https",
							"host": [
								"waiting-pretty-somersault",
								"glitch",
								"me"
							],
							"path": [
								"user",
								"register"
							]
						},
						"description": "Endpoint ini berfungsi untuk melakukan register akun para user baru\n\nPada endpoint ini, user baru harus memasukkan parameter email, password, nama_user, jenis_user, gambar_profile\n\nnote : email tidak boleh kembar dan gambar harus diupload"
					},
					"response": []
				},
				{
					"name": "login",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"login berhasil\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"berhasil menggunakan hosting\", function () { \r",
									"    pm.expect(pm.environment.get(\"base_url\")).to.equal(\"https://waiting-pretty-somersault.glitch.me\"); \r",
									"});\r",
									"pm.test(\"response was successfull\", function () { \r",
									"    pm.response.to.not.be.error; \r",
									"    pm.response.to.have.jsonBody(\"key\"); \r",
									"    pm.response.to.not.have.jsonBody(\"error\"); \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "demo2@gmail.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "demo2",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://waiting-pretty-somersault.glitch.me/user/login",
							"protocol": "https",
							"host": [
								"waiting-pretty-somersault",
								"glitch",
								"me"
							],
							"path": [
								"user",
								"login"
							]
						},
						"description": "Request yang digunakan untuk login user\n\nsetelah login, maka user akan mendapatkan apikeynya yang dapat digunakan untuk mengakses beberapa request-request lainnya yang membutuhkan apikey"
					},
					"response": []
				},
				{
					"name": "top Up API hit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"berhasil topup APIhit\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"apikey ada\", () => {\r",
									"    pm.request.to.have.header(\"key\");\r",
									"});\r",
									"\r",
									"pm.test(\"response was successfull\", function () { \r",
									"    pm.response.to.not.be.error; \r",
									"    pm.response.to.not.have.jsonBody(\"error\"); \r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const tokenUrl = `https://waiting-pretty-somersault.glitch.me/user/login`;\r",
									"\r",
									"const getTokenRequest = {\r",
									"  method: 'POST',\r",
									"  url: tokenUrl,\r",
									"  body: {\r",
									"        mode: 'urlencoded',\r",
									"        urlencoded: [\r",
									"        {key: \"email\", value: \"demo1@gmail.com\"},\r",
									"        {key: \"password\", value: \"demo1\"}\r",
									"        ] \r",
									"    }\r",
									"};\r",
									"pm.sendRequest(getTokenRequest, (err, response) => {\r",
									"  const jsonResponse = response.json();\r",
									"  const newAccessToken = jsonResponse.key;\r",
									"  pm.environment.set('x-auth-token', newAccessToken);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "key",
								"value": "{{x-auth-token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "total_api_hit",
									"value": "500",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://waiting-pretty-somersault.glitch.me/user/topUpAPIhit",
							"protocol": "https",
							"host": [
								"waiting-pretty-somersault",
								"glitch",
								"me"
							],
							"path": [
								"user",
								"topUpAPIhit"
							]
						},
						"description": "Request ini digunakan untuk menambahkan api hit untuk user. 1 apihit akan berharga 1000 yang akan dipotong dari saldo user."
					},
					"response": []
				},
				{
					"name": "top up saldo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"berhasil topup saldo\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"apikey ada\", () => {\r",
									"    pm.request.to.have.header(\"key\");\r",
									"});\r",
									"\r",
									"pm.test(\"response was successfull\", function () { \r",
									"    pm.response.to.not.be.error; \r",
									"    pm.response.to.not.have.jsonBody(\"error\"); \r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const tokenUrl = `https://waiting-pretty-somersault.glitch.me/user/login`;\r",
									"\r",
									"const getTokenRequest = {\r",
									"  method: 'POST',\r",
									"  url: tokenUrl,\r",
									"  body: {\r",
									"        mode: 'urlencoded',\r",
									"        urlencoded: [\r",
									"        {key: \"email\", value: \"demo1@gmail.com\"},\r",
									"        {key: \"password\", value: \"demo1\"}\r",
									"        ] \r",
									"    }\r",
									"};\r",
									"pm.sendRequest(getTokenRequest, (err, response) => {\r",
									"  const jsonResponse = response.json();\r",
									"  const newAccessToken = jsonResponse.key;\r",
									"  pm.environment.set('x-auth-token', newAccessToken);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "key",
								"value": "{{x-auth-token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "total_saldo",
									"value": "10000",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://waiting-pretty-somersault.glitch.me/user/topUpSaldo",
							"protocol": "https",
							"host": [
								"waiting-pretty-somersault",
								"glitch",
								"me"
							],
							"path": [
								"user",
								"topUpSaldo"
							]
						},
						"description": "Request ini digunakan untuk menambahkan saldo user yang akan dipakai untuk request  api hit."
					},
					"response": []
				},
				{
					"name": "update profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// const jsonData = pm.response.json();\r",
									"// pm.test(\"response berbentuk string(pesan)\", function(){\r",
									"//     pm.expect(jsonData).to.be.an(\"string\");\r",
									"// });\r",
									"\r",
									"pm.test(\"apikey ada\", () => {\r",
									"    pm.request.to.have.header(\"key\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const tokenUrl = `https://waiting-pretty-somersault.glitch.me/user/login`;\r",
									"\r",
									"const getTokenRequest = {\r",
									"  method: 'POST',\r",
									"  url: tokenUrl,\r",
									"  body: {\r",
									"        mode: 'urlencoded',\r",
									"        urlencoded: [\r",
									"        {key: \"email\", value: \"demo1@gmail.com\"},\r",
									"        {key: \"password\", value: \"demo1\"}\r",
									"        ] \r",
									"    }\r",
									"};\r",
									"pm.sendRequest(getTokenRequest, (err, response) => {\r",
									"  const jsonResponse = response.json();\r",
									"  const newAccessToken = jsonResponse.key;\r",
									"  pm.environment.set('x-auth-token', newAccessToken);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "key",
								"value": "{{x-auth-token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "nama_user",
									"value": "ducky2",
									"type": "text"
								},
								{
									"key": "password",
									"value": "12345",
									"type": "text"
								},
								{
									"key": "jenis_user",
									"value": "P",
									"type": "text"
								},
								{
									"key": "gambar_profile",
									"type": "file",
									"src": "/E:/jeffry's documents/materi stts/semester 6/soa/proyek/pic.jpg"
								}
							]
						},
						"url": {
							"raw": "https://waiting-pretty-somersault.glitch.me/user/profile",
							"protocol": "https",
							"host": [
								"waiting-pretty-somersault",
								"glitch",
								"me"
							],
							"path": [
								"user",
								"profile"
							]
						}
					},
					"response": []
				}
			],
			"description": "Kumpulan request yang digunakan untuk mengubah/menambah data user\n\nData-data ini bisa dimulai dari register user baru, menambah favorit, sampai menghapus history"
		},
		{
			"name": "game",
			"item": [
				{
					"name": "detailGame",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"pm.test(\"response berbentuk array\", function(){\r",
									"    pm.expect(jsonData).to.be.an(\"array\");\r",
									"});\r",
									"\r",
									"pm.test(\"apikey ada\", () => {\r",
									"    pm.request.to.have.header(\"key\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const tokenUrl = `https://waiting-pretty-somersault.glitch.me/user/login`;\r",
									"\r",
									"const getTokenRequest = {\r",
									"  method: 'POST',\r",
									"  url: tokenUrl,\r",
									"  body: {\r",
									"        mode: 'urlencoded',\r",
									"        urlencoded: [\r",
									"        {key: \"email\", value: \"demo2@gmail.com\"},\r",
									"        {key: \"password\", value: \"demo2\"}\r",
									"        ] \r",
									"    }\r",
									"};\r",
									"pm.sendRequest(getTokenRequest, (err, response) => {\r",
									"  const jsonResponse = response.json();\r",
									"  const newAccessToken = jsonResponse.key;\r",
									"  pm.environment.set('x-auth-token', newAccessToken);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "key",
								"value": "{{x-auth-token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://waiting-pretty-somersault.glitch.me/game/id/:id",
							"protocol": "https",
							"host": [
								"waiting-pretty-somersault",
								"glitch",
								"me"
							],
							"path": [
								"game",
								"id",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						},
						"description": "Request untuk mendapat detail dari game. Request ini akan membutuhkan id game dan akan mengembalikan data dari gamenya."
					},
					"response": []
				},
				{
					"name": "searchGame",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"pm.test(\"response berbentuk array\", function(){\r",
									"    pm.expect(jsonData).to.be.an(\"array\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://waiting-pretty-somersault.glitch.me/game/search/:keyword",
							"protocol": "https",
							"host": [
								"waiting-pretty-somersault",
								"glitch",
								"me"
							],
							"path": [
								"game",
								"search",
								":keyword"
							],
							"variable": [
								{
									"key": "keyword",
									"value": "portal"
								}
							]
						},
						"description": "Request ini akan mengembalikan array informasi game yang memiliki nama yang mengandung parameter yang dimasukkan. informasi game yang diberikan akan lebih singkat dari detail game"
					},
					"response": []
				},
				{
					"name": "listAllGame",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"pm.test(\"response berbentuk array\", function(){\r",
									"    pm.expect(jsonData).to.be.an(\"array\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://waiting-pretty-somersault.glitch.me/game/listall?page=2",
							"protocol": "https",
							"host": [
								"waiting-pretty-somersault",
								"glitch",
								"me"
							],
							"path": [
								"game",
								"listall"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								}
							]
						},
						"description": "Request ini dapat digunakan untuk mendapatkan semua game yang ada. Tapi akan dibatasi dengan halaman yang dimasukkan(paging)"
					},
					"response": []
				},
				{
					"name": "filterGame",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"pm.test(\"response berbentuk array\", function(){\r",
									"    pm.expect(jsonData).to.be.an(\"array\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://waiting-pretty-somersault.glitch.me/game/filter?genre=puzzle&page=1&start_year=2010&end_year=2014&rating_start=3&rating_end=5&metacritic_start=0&metacritic_end=80&playtime_start=0&playtime_end=10",
							"protocol": "https",
							"host": [
								"waiting-pretty-somersault",
								"glitch",
								"me"
							],
							"path": [
								"game",
								"filter"
							],
							"query": [
								{
									"key": "genre",
									"value": "puzzle"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "start_year",
									"value": "2010"
								},
								{
									"key": "end_year",
									"value": "2014"
								},
								{
									"key": "rating_start",
									"value": "3"
								},
								{
									"key": "rating_end",
									"value": "5"
								},
								{
									"key": "metacritic_start",
									"value": "0"
								},
								{
									"key": "metacritic_end",
									"value": "80"
								},
								{
									"key": "playtime_start",
									"value": "0"
								},
								{
									"key": "playtime_end",
									"value": "10"
								}
							]
						},
						"description": "Mendapatkan semua  game berdasarkan filter(genre, tahun release, dll) yang ada dalam bentuk paging"
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}